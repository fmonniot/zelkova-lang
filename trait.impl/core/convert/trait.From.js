(function() {
    var implementors = Object.fromEntries([["zelkova_lang",[["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"zelkova_lang/compiler/name/struct.QualName.html\" title=\"struct zelkova_lang::compiler::name::QualName\">QualName</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.str.html\">str</a>&gt; for <a class=\"struct\" href=\"zelkova_lang/compiler/name/struct.Name.html\" title=\"struct zelkova_lang::compiler::name::Name\">Name</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"zelkova_lang/compiler/parser/layout/enum.LayoutError.html\" title=\"enum zelkova_lang::compiler::parser::layout::LayoutError\">LayoutError</a>&gt; for <a class=\"enum\" href=\"zelkova_lang/compiler/parser/error/enum.Error.html\" title=\"enum zelkova_lang::compiler::parser::error::Error\">Error</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"zelkova_lang/compiler/typer/enum.Error.html\" title=\"enum zelkova_lang::compiler::typer::Error\">Error</a>&gt; for <a class=\"enum\" href=\"zelkova_lang/compiler/enum.CompilationError.html\" title=\"enum zelkova_lang::compiler::CompilationError\">CompilationError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"enum\" href=\"zelkova_lang/compiler/canonical/enum.Error.html\" title=\"enum zelkova_lang::compiler::canonical::Error\">Error</a>&gt;&gt; for <a class=\"enum\" href=\"zelkova_lang/compiler/canonical/enum.Error.html\" title=\"enum zelkova_lang::compiler::canonical::Error\">Error</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;<a class=\"struct\" href=\"zelkova_lang/compiler/source/files/struct.SourceFileError.html\" title=\"struct zelkova_lang::compiler::source::files::SourceFileError\">SourceFileError</a>&gt;&gt; for <a class=\"enum\" href=\"zelkova_lang/compiler/enum.CompilationError.html\" title=\"enum zelkova_lang::compiler::CompilationError\">CompilationError</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/alloc/vec/struct.Vec.html\" title=\"struct alloc::vec::Vec\">Vec</a>&lt;EnvError&gt;&gt; for <a class=\"enum\" href=\"zelkova_lang/compiler/canonical/enum.Error.html\" title=\"enum zelkova_lang::compiler::canonical::Error\">Error</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt; for <a class=\"enum\" href=\"zelkova_lang/compiler/source/files/enum.SourceFileErrorType.html\" title=\"enum zelkova_lang::compiler::source::files::SourceFileErrorType\">SourceFileErrorType</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.90.0/std/path/struct.StripPrefixError.html\" title=\"struct std::path::StripPrefixError\">StripPrefixError</a>&gt; for <a class=\"enum\" href=\"zelkova_lang/compiler/source/files/enum.SourceFileErrorType.html\" title=\"enum zelkova_lang::compiler::source::files::SourceFileErrorType\">SourceFileErrorType</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"zelkova_lang/compiler/parser/tokenizer/struct.TokenizerError.html\" title=\"struct zelkova_lang::compiler::parser::tokenizer::TokenizerError\">TokenizerError</a>&gt; for <a class=\"enum\" href=\"zelkova_lang/compiler/parser/error/enum.Error.html\" title=\"enum zelkova_lang::compiler::parser::error::Error\">Error</a>"],["impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;ParseError&lt;<a class=\"struct\" href=\"zelkova_lang/compiler/position/struct.BytePos.html\" title=\"struct zelkova_lang::compiler::position::BytePos\">BytePos</a>, <a class=\"enum\" href=\"zelkova_lang/compiler/parser/tokenizer/enum.Token.html\" title=\"enum zelkova_lang::compiler::parser::tokenizer::Token\">Token</a>, <a class=\"enum\" href=\"zelkova_lang/compiler/parser/error/enum.Error.html\" title=\"enum zelkova_lang::compiler::parser::error::Error\">Error</a>&gt;&gt; for <a class=\"enum\" href=\"zelkova_lang/compiler/parser/error/enum.Error.html\" title=\"enum zelkova_lang::compiler::parser::error::Error\">Error</a>"],["impl&lt;I, T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.90.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.90.0/std/primitive.tuple.html\">(I, T, I)</a>&gt; for <a class=\"struct\" href=\"zelkova_lang/compiler/position/struct.Spanned.html\" title=\"struct zelkova_lang::compiler::position::Spanned\">Spanned</a>&lt;I, T&gt;"]]]]);
    if (window.register_implementors) {
        window.register_implementors(implementors);
    } else {
        window.pending_implementors = implementors;
    }
})()
//{"start":57,"fragment_lengths":[6074]}